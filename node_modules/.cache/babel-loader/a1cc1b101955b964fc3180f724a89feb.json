{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nexport const getBooks = createAsyncThunk(\"book/getBooks\", async (_, thunkAPI) => {\n  const {\n    rejectWithValue\n  } = thunkAPI;\n\n  try {\n    const res = await fetch(\"http://localhost:3005/books\");\n    const data = await res.json();\n    return data;\n  } catch (error) {\n    return rejectWithValue(error.message);\n  }\n});\nexport const insertBook = createAsyncThunk('book/insertBook', async (bookData, thunkAPI) => {\n  const {\n    rejectWithValue,\n    getState,\n    dispatch\n  } = thunkAPI;\n\n  try {\n    bookData.userName = getState().auth.name; //disptch\n    // dispatch(deleteBook({ id: 5 }));\n\n    const res = await fetch('http://localhost:3005/books', {\n      method: 'POST',\n      body: JSON.stringify(bookData),\n      headers: {\n        'Content-type': 'application/json; charset=UTF-8'\n      }\n    }); //report\n\n    const data = await res.json(); // dispatch(logInsert({ name: 'insertBook', status: 'success' }));\n\n    return data;\n  } catch (error) {\n    // dispatch(logInsert({ name: 'insertBook', status: 'failed' }));\n    return rejectWithValue(error.message);\n  }\n});\nconst bookSlice = createSlice({\n  name: \"book\",\n  initialState: {\n    books: [],\n    isLoading: false,\n    error: null\n  },\n  extraReducers: {\n    [getBooks.pending]: (state, action) => {\n      state.error = null;\n      state.isLoading = true;\n    },\n    [getBooks.fulfilled]: (state, action) => {\n      state.isLoading = false;\n      state.books = action.payload;\n    },\n    [getBooks.rejected]: (state, action) => {\n      state.isLoading = false;\n      state.error = action.payload;\n    }\n  }\n});\nexport default bookSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","getBooks","_","thunkAPI","rejectWithValue","res","fetch","data","json","error","message","insertBook","bookData","getState","dispatch","userName","auth","name","method","body","JSON","stringify","headers","bookSlice","initialState","books","isLoading","extraReducers","pending","state","action","fulfilled","payload","rejected","reducer"],"sources":["/Users/basharsamir/Documents/Project/react7/book-store/src/store/bookSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\n\nexport const getBooks = createAsyncThunk(\n  \"book/getBooks\",\n  async (_, thunkAPI) => {\n    const { rejectWithValue } = thunkAPI;\n    try {\n      const res = await fetch(\"http://localhost:3005/books\");\n      const data = await res.json();\n      return data;\n    } catch (error) {\n      return rejectWithValue(error.message);\n    }\n  }\n);\nexport const insertBook = createAsyncThunk(\n    'book/insertBook',\n    async (bookData, thunkAPI) => {\n      const { rejectWithValue, getState, dispatch } = thunkAPI;\n      try {\n        bookData.userName = getState().auth.name;\n        //disptch\n        // dispatch(deleteBook({ id: 5 }));\n        const res = await fetch('http://localhost:3005/books', {\n          method: 'POST',\n          body: JSON.stringify(bookData),\n          headers: {\n            'Content-type': 'application/json; charset=UTF-8',\n          },\n        });\n        //report\n        const data = await res.json();\n        // dispatch(logInsert({ name: 'insertBook', status: 'success' }));\n        return data;\n      } catch (error) {\n        // dispatch(logInsert({ name: 'insertBook', status: 'failed' }));\n        return rejectWithValue(error.message);\n      }\n    }\n  );\n\nconst bookSlice = createSlice({\n  name: \"book\",\n  initialState: { books: [], isLoading: false, error: null },\n  extraReducers: {\n    [getBooks.pending]: (state, action) => {\n      state.error = null;\n      state.isLoading = true;\n    },\n    [getBooks.fulfilled]: (state, action) => {\n      state.isLoading = false;\n      state.books = action.payload;\n    },\n    [getBooks.rejected]: (state, action) => {\n      state.isLoading = false;\n      state.error = action.payload;\n    },\n  },\n});\nexport default bookSlice.reducer;\n"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,gBAAtB,QAA8C,kBAA9C;AAEA,OAAO,MAAMC,QAAQ,GAAGD,gBAAgB,CACtC,eADsC,EAEtC,OAAOE,CAAP,EAAUC,QAAV,KAAuB;EACrB,MAAM;IAAEC;EAAF,IAAsBD,QAA5B;;EACA,IAAI;IACF,MAAME,GAAG,GAAG,MAAMC,KAAK,CAAC,6BAAD,CAAvB;IACA,MAAMC,IAAI,GAAG,MAAMF,GAAG,CAACG,IAAJ,EAAnB;IACA,OAAOD,IAAP;EACD,CAJD,CAIE,OAAOE,KAAP,EAAc;IACd,OAAOL,eAAe,CAACK,KAAK,CAACC,OAAP,CAAtB;EACD;AACF,CAXqC,CAAjC;AAaP,OAAO,MAAMC,UAAU,GAAGX,gBAAgB,CACtC,iBADsC,EAEtC,OAAOY,QAAP,EAAiBT,QAAjB,KAA8B;EAC5B,MAAM;IAAEC,eAAF;IAAmBS,QAAnB;IAA6BC;EAA7B,IAA0CX,QAAhD;;EACA,IAAI;IACFS,QAAQ,CAACG,QAAT,GAAoBF,QAAQ,GAAGG,IAAX,CAAgBC,IAApC,CADE,CAEF;IACA;;IACA,MAAMZ,GAAG,GAAG,MAAMC,KAAK,CAAC,6BAAD,EAAgC;MACrDY,MAAM,EAAE,MAD6C;MAErDC,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeT,QAAf,CAF+C;MAGrDU,OAAO,EAAE;QACP,gBAAgB;MADT;IAH4C,CAAhC,CAAvB,CAJE,CAWF;;IACA,MAAMf,IAAI,GAAG,MAAMF,GAAG,CAACG,IAAJ,EAAnB,CAZE,CAaF;;IACA,OAAOD,IAAP;EACD,CAfD,CAeE,OAAOE,KAAP,EAAc;IACd;IACA,OAAOL,eAAe,CAACK,KAAK,CAACC,OAAP,CAAtB;EACD;AACF,CAvBqC,CAAnC;AA0BP,MAAMa,SAAS,GAAGxB,WAAW,CAAC;EAC5BkB,IAAI,EAAE,MADsB;EAE5BO,YAAY,EAAE;IAAEC,KAAK,EAAE,EAAT;IAAaC,SAAS,EAAE,KAAxB;IAA+BjB,KAAK,EAAE;EAAtC,CAFc;EAG5BkB,aAAa,EAAE;IACb,CAAC1B,QAAQ,CAAC2B,OAAV,GAAoB,CAACC,KAAD,EAAQC,MAAR,KAAmB;MACrCD,KAAK,CAACpB,KAAN,GAAc,IAAd;MACAoB,KAAK,CAACH,SAAN,GAAkB,IAAlB;IACD,CAJY;IAKb,CAACzB,QAAQ,CAAC8B,SAAV,GAAsB,CAACF,KAAD,EAAQC,MAAR,KAAmB;MACvCD,KAAK,CAACH,SAAN,GAAkB,KAAlB;MACAG,KAAK,CAACJ,KAAN,GAAcK,MAAM,CAACE,OAArB;IACD,CARY;IASb,CAAC/B,QAAQ,CAACgC,QAAV,GAAqB,CAACJ,KAAD,EAAQC,MAAR,KAAmB;MACtCD,KAAK,CAACH,SAAN,GAAkB,KAAlB;MACAG,KAAK,CAACpB,KAAN,GAAcqB,MAAM,CAACE,OAArB;IACD;EAZY;AAHa,CAAD,CAA7B;AAkBA,eAAeT,SAAS,CAACW,OAAzB"},"metadata":{},"sourceType":"module"}